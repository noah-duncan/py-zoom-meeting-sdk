name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - main
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install gdown
      run: pip install gdown

    - name: Cache extracted files
      id: cache-extract
      uses: actions/cache@v4
      with:
        path: src/zoomsdk
        key: ${{ runner.os }}-extract-${{ secrets.ZOOM_SDK_FILENAME }}

    - name: Download and extract if cache miss
      if: steps.cache-extract.outputs.cache-hit != 'true'
      run: |
        mkdir src/zoomsdk
        gdown ${{ secrets.ZOOM_SDK_GDRIVE_ID }}
        tar -xf ${{ secrets.ZOOM_SDK_FILENAME }} -C src/zoomsdk

    - name: Copy and add the .so
      run: |
        cp src/zoomsdk/libmeetingsdk.so src/zoomsdk/libmeetingsdk.so.1
        cp /home/runner/work/py-zoom-meeting-sdk/py-zoom-meeting-sdk/src/zoomsdk/libmeetingsdk.so /home/runner/work/py-zoom-meeting-sdk/py-zoom-meeting-sdk/src/zoomsdk/libmeetingsdk.so.1
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/src/zoomsdk
        echo $LD_LIBRARY_PATH
        export CIBW_BEFORE_ALL='echo "WTF";cp /home/runner/work/py-zoom-meeting-sdk/py-zoom-meeting-sdk/src/zoomsdk/libmeetingsdk.so.1 /usr/local/lib64'

    - uses: pypa/cibuildwheel@v2.19

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: dist-${{ matrix.os }}

  merge_wheels:
    name: Merge wheels into a combined artifact
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: dist
          pattern: dist-*

  upload_all:
    name: Upload if release
    needs: merge_wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5

    - uses: actions/download-artifact@v4
      with:
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
